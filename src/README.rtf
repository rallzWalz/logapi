FLASK Logging API 
By Rall Walsh
Copyright 2022
All rights reserved. 

To execute: 
Clone/download repo.

Make sure you have docker installed: 
https://docs.docker.com/get-docker/

CD into logapi/src directory

On a Mac/linux run
./run_api.sh

On platforms other than Mac, you can try running the Docker commands from the .SH file individually: 
First:
docker build -t test -f ./API_Dockerfile . 

But replace $dir in the second docker command (below) with the path to the src directory. 
docker run -p 8080:8080 -v $dir:/src --rm test


This will: 
Build a docker image
Run the docker image that has a Flask logging API to a text file. 
Mount the image onto your local directory so that logs persist between executions. 

Test the API with the following CURLs: 

curl --location --request POST '0.0.0.0:8080/api/log' \
--header 'Content-Type: application/json' \
--data-raw '{
    "logEntries": [
        "<entry text 1>",
        "<entry text 2>"
    ]
}'



curl --location --request GET '0.0.0.0:8080/api/log?num_lines=4' \
--header 'Content-Type: application/json' 


Note:
This requires volume mounting so you may need to add a folder containing the reop folder in your Docker configs. You’ll see a message like this below. 

The path /users/rall/Documents/Repos/logapi/src is not shared from the host and is not known to Docker.
You can configure shared paths from Docker -> Preferences... -> Resources -> File Sharing.



Contents:
Logs/logs.txt a log file that this API adds to and reads from. 
app.py a python Flask app
Requirements.txt minimalist requirements for docker environment
requirements_specific.txt my actual local de environment, what I used but you shouldn’t need to. 
API_Dockerfile a Dockerfile that rockeries app.py 
run_api.sh a shell script that builds and runs the docker image with volume mounting and port mapping.


